{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\my-web-app\\\\src\\\\components\\\\SharePlaylists.js\",\n  _s = $RefreshSig$();\n// src/components/SharePlaylists.js\nimport React, { useState } from \"react\";\nimport playlistData from \"../music/playlists\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SharePlaylists() {\n  _s();\n  const [selected, setSelected] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n  const handleSelect = e => {\n    const name = e.target.value;\n    setSelected(name);\n    setSongs(playlistData[name] || []);\n  };\n  const handleExport = () => {\n    if (!selected || songs.length === 0) return;\n    const textContent = songs.map((song, index) => `${index + 1}. ${song.title} - ${song.artist}\\n${song.src}`).join(\"\\n\\n\");\n    const blob = new Blob([textContent], {\n      type: \"text/plain\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = `${selected}_playlist.txt`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-songs-container\",\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFB5 Share or Export a Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selected,\n      onChange: handleSelect,\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Choose Playlist --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), Object.keys(playlistData).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: key,\n        children: key.replace(/([A-Z])/g, \" $1\").replace(/^./, str => str.toUpperCase())\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), songs.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: [\"\\uD83C\\uDFA7 Songs in \", selected]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          paddingLeft: 0\n        },\n        children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: song.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), \" by \", song.artist]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleExport,\n        children: \"\\uD83D\\uDCE5 Export Playlist (.txt)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(SharePlaylists, \"A6C7pqJmsIJzOIECsGRPtzNjzsw=\");\n_c = SharePlaylists;\nexport default SharePlaylists;\nvar _c;\n$RefreshReg$(_c, \"SharePlaylists\");","map":{"version":3,"names":["React","useState","playlistData","jsxDEV","_jsxDEV","Fragment","_Fragment","SharePlaylists","_s","selected","setSelected","songs","setSongs","handleSelect","e","name","target","value","handleExport","length","textContent","map","song","index","title","artist","src","join","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","className","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","Object","keys","key","replace","str","toUpperCase","marginTop","listStyle","paddingLeft","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/my-web-app/src/components/SharePlaylists.js"],"sourcesContent":["// src/components/SharePlaylists.js\r\nimport React, { useState } from \"react\";\r\nimport playlistData from \"../music/playlists\";\r\n\r\nfunction SharePlaylists() {\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [songs, setSongs] = useState([]);\r\n\r\n  const handleSelect = (e) => {\r\n    const name = e.target.value;\r\n    setSelected(name);\r\n    setSongs(playlistData[name] || []);\r\n  };\r\n\r\n  const handleExport = () => {\r\n    if (!selected || songs.length === 0) return;\r\n\r\n    const textContent = songs\r\n      .map((song, index) => `${index + 1}. ${song.title} - ${song.artist}\\n${song.src}`)\r\n      .join(\"\\n\\n\");\r\n\r\n    const blob = new Blob([textContent], { type: \"text/plain\" });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.download = `${selected}_playlist.txt`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"view-songs-container\" style={{ textAlign: \"center\" }}>\r\n      <h2>ðŸŽµ Share or Export a Playlist</h2>\r\n\r\n      <select value={selected} onChange={handleSelect} className=\"input-field\">\r\n        <option value=\"\">-- Choose Playlist --</option>\r\n        {Object.keys(playlistData).map((key) => (\r\n          <option key={key} value={key}>\r\n            {key.replace(/([A-Z])/g, \" $1\").replace(/^./, str => str.toUpperCase())}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {songs.length > 0 && (\r\n        <>\r\n          <h3 style={{ marginTop: \"20px\" }}>ðŸŽ§ Songs in {selected}</h3>\r\n          <ul style={{ listStyle: \"none\", paddingLeft: 0 }}>\r\n            {songs.map((song, index) => (\r\n              <li key={index}>\r\n                <strong>{song.title}</strong> by {song.artist}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button className=\"button\" onClick={handleExport}>\r\n            ðŸ“¥ Export Playlist (.txt)\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SharePlaylists;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}